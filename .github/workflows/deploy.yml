name: CI/CD Pipeline for API Deployment

on:
  push:
    branches: [ "main" ]  # Trigger on pushes to main branch

jobs:
  train:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: echo "Training job placeholder (replace with actual training script)"

  test:
    runs-on: ubuntu-latest
    needs: train
    steps:
      - uses: actions/checkout@v4
      - run: echo "Testing job placeholder (replace with pytest/other tests)"

  build-and-push:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/api:latest .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/api:latest

  deploy:
    runs-on: self-hosted  # Critical: Uses your EC2 runner
    needs: build-and-push
    steps:
      - uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Stop and Remove Old Container
        run: |
          docker stop api-container || true
          docker rm api-container || true
      
      - name: Pull Latest Image
        run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/api:latest
      
      - name: Run New Container
        run: |
          docker run -d \
            --name api-container \
            -p 5000:5000 \
            --restart unless-stopped \
            ${{ secrets.DOCKERHUB_USERNAME }}/api:latest
      
      - name: Verify Deployment
        run: |
          sleep 10  # Wait for container to start
          curl -s http://localhost:5000/healthcheck || echo "API failed to start"
